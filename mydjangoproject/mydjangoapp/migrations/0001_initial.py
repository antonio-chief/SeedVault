# Generated by Django 4.1.13 on 2024-08-03 00:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminAllUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100, unique=True)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('UserPassword', models.CharField(max_length=100)),
                ('DateAdded', models.DateTimeField()),
                ('SubscriptionStatus', models.CharField(max_length=50)),
                ('Location', models.CharField(max_length=255)),
                ('Age', models.IntegerField()),
                ('Gender', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='AdminFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100)),
                ('UserName', models.CharField(max_length=100)),
                ('Date', models.DateTimeField()),
                ('Feedback', models.TextField()),
                ('Reports', models.TextField()),
                ('Responses', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AdminRecommendations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed_name', models.CharField(max_length=255)),
                ('text_snippet', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AdminSeedCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('Category', models.CharField(max_length=50)),
                ('SeedType', models.CharField(max_length=50)),
                ('SeedName', models.CharField(max_length=100)),
                ('OptimalTemperature', models.CharField(max_length=50)),
                ('LowestTemp', models.CharField(max_length=50)),
                ('HighestTemp', models.CharField(max_length=50)),
                ('OptimalDampness', models.FloatField()),
                ('LowestDampness', models.FloatField()),
                ('HighestDampness', models.FloatField()),
                ('OptimalLight', models.FloatField()),
                ('LowestLight', models.FloatField()),
                ('HighestLight', models.FloatField()),
                ('BestPlantingWeather', models.CharField(max_length=50)),
                ('BestPlantingMonth', models.CharField(max_length=50)),
                ('AreaMostPlanted', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AdminSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('SubscriptionStatus', models.CharField(max_length=50)),
                ('Premium', models.CharField(max_length=10)),
                ('Payment', models.CharField(max_length=50)),
                ('Billing', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EquipmentID', models.CharField(max_length=50)),
                ('Status', models.CharField(max_length=100)),
                ('LastUpdated', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateTimeField()),
                ('Event', models.CharField(max_length=100)),
                ('EventLocation', models.CharField(max_length=255)),
                ('Activity', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Monitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedName', models.CharField(max_length=100)),
                ('CurrentTemperature', models.CharField(max_length=100)),
                ('OptimalTemperature', models.CharField(max_length=100)),
                ('LowTemperatureLimit', models.CharField(max_length=100)),
                ('HighTemperatureLimit', models.CharField(max_length=100)),
                ('CurrentDampness', models.FloatField()),
                ('OptimalDampness', models.FloatField()),
                ('LowDampnessLimit', models.FloatField()),
                ('HighDampnessLimit', models.FloatField()),
                ('CurrentLight', models.FloatField()),
                ('OptimalLight', models.FloatField()),
                ('LowLightLimit', models.FloatField()),
                ('HighLightLimit', models.FloatField()),
                ('Image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='RestrictedArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AreaName', models.CharField(max_length=100)),
                ('Reason', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PersonID', models.CharField(max_length=50)),
                ('DateAccessed', models.DateField()),
                ('TimeAccessed', models.TimeField()),
                ('RestrictedAreas', models.CharField(max_length=255)),
                ('PlaceAccessed', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityBreach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BreachID', models.CharField(max_length=50)),
                ('Date', models.DateField()),
                ('Time', models.TimeField()),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='seeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedCategory', models.CharField(choices=[('seed', 'Seed'), ('germplasm', 'Germplasm')], max_length=255)),
                ('SeedType', models.CharField(choices=[('herb', 'Herb'), ('vegetable', 'Vegetable'), ('flower', 'Flower'), ('fruit', 'Fruit'), ('legume', 'Legume'), ('cereal', 'Cereal'), ('spice', 'Spice'), ('other', 'Other')], max_length=255)),
                ('SeedName', models.CharField(max_length=255)),
                ('DateBought', models.DateTimeField(default=django.utils.timezone.now)),
                ('ExpiryDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('PlantingDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('TemperatureRequirement', models.FloatField()),
                ('LightRequirement', models.FloatField()),
                ('MoistureRequirement', models.FloatField()),
                ('SeedQuantity', models.IntegerField()),
                ('AdditionalInfo', models.CharField(max_length=800)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(blank=True, max_length=100, null=True)),
                ('WarehouseName', models.CharField(blank=True, max_length=100, null=True)),
                ('WarehouseNo', models.IntegerField(blank=True, null=True)),
                ('ShelfNo', models.IntegerField(blank=True, null=True)),
                ('UnitNo', models.IntegerField(blank=True, null=True)),
                ('VaultName', models.CharField(blank=True, max_length=100, null=True)),
                ('VaultNo', models.IntegerField(blank=True, null=True)),
                ('SeedBankName', models.CharField(blank=True, max_length=100, null=True)),
                ('SeedBankNo', models.IntegerField(blank=True, null=True)),
                ('SeedCaseNo', models.IntegerField(blank=True, null=True)),
                ('CaseSectionNo', models.IntegerField(blank=True, null=True)),
                ('SeedBoxNo', models.IntegerField(blank=True, null=True)),
                ('BoxUnitNo', models.IntegerField(blank=True, null=True)),
                ('SeedAlbumNo', models.IntegerField(blank=True, null=True)),
                ('PageNo', models.IntegerField(blank=True, null=True)),
                ('SeedName', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageFacilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.IntegerField(default=0)),
                ('free', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Totals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planted', models.IntegerField(default=0)),
                ('in_inventory', models.IntegerField(default=0)),
                ('older', models.IntegerField(default=0)),
                ('newer', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100, unique=True)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('UserPassword', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WeatherToday', models.CharField(max_length=50)),
                ('WeatherTomorrow', models.CharField(max_length=50)),
                ('WeatherNextWeek', models.CharField(max_length=50)),
                ('WeatherNextMonth', models.CharField(max_length=50)),
                ('SuitablePlant', models.CharField(max_length=100)),
                ('SunnyTemperature', models.CharField(max_length=50)),
                ('SunnyDampness', models.FloatField()),
                ('SunnyLight', models.FloatField()),
                ('RainyTemperature', models.CharField(max_length=50)),
                ('RainyDampness', models.FloatField()),
                ('RainyLight', models.FloatField()),
                ('CloudyTemperature', models.CharField(max_length=50)),
                ('CloudyDampness', models.FloatField()),
                ('CloudyLight', models.FloatField()),
                ('SeedID', models.CharField(max_length=100)),
                ('SuitabilityToSeed', models.CharField(max_length=50)),
                ('SeedToCheck', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkerID', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=100)),
                ('AssignedPlace', models.CharField(max_length=255)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('StorageFacility', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('sensor_data', models.JSONField(blank=True, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mydjangoapp.events')),
            ],
        ),
    ]
